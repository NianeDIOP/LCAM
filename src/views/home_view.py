import streamlit as st
import pandas as pd
import os
import sqlite3
from ..config import THEME_COLORS, APP_NAME, DB_PATH
from ..utils.db_utils import get_db_connection

def show_home_view():
    """Affiche la page d'accueil de l'application"""
    
    # Titre principal
    st.title("üìä Bienvenue dans LCAMS")
    st.subheader("Logiciel de Calcul et Analyse des Moyennes Semestrielles")
    
    # Pr√©sentation de l'application
    st.markdown("""
    LCAMS est une application con√ßue pour les √©tablissements scolaires s√©n√©galais permettant d'importer, 
    d'analyser et d'interpr√©ter les donn√©es d'√©valuation g√©n√©r√©es par la plateforme nationale PLANETE.
    
    ### Fonctionnalit√©s principales:
    - Importation des fichiers Excel standardis√©s de PLANETE
    - Analyses d√©taill√©es par niveau, classe, sexe et discipline
    - Tableaux de bord dynamiques et rapports personnalis√©s
    - Analyse comparative entre semestres
    - Visualisation des d√©cisions finales
    
    Pour commencer, utilisez le menu de navigation √† gauche pour acc√©der aux diff√©rents modules.
    """)
    
    # Affichage des stats g√©n√©rales si des donn√©es existent
    if os.path.exists(DB_PATH):
        st.subheader("üìà Tableau de bord")
        
        # Cr√©er un layout avec 4 colonnes pour les stats
        col1, col2, col3, col4 = st.columns(4)
        
        # Connexion √† la base de donn√©es
        conn = get_db_connection()
        
        # Nombre d'√©l√®ves
        cursor = conn.cursor()
        cursor.execute("SELECT COUNT(*) FROM Eleves")
        nb_eleves = cursor.fetchone()[0]
        
        # Nombre de classes
        cursor.execute("SELECT COUNT(*) FROM Classes WHERE etat = 'actif'")
        nb_classes = cursor.fetchone()[0]
        
        # Nombre de disciplines
        cursor.execute("SELECT COUNT(*) FROM Disciplines")
        nb_disciplines = cursor.fetchone()[0]
        
        # Ann√©e scolaire active
        cursor.execute("SELECT libelle FROM Annee_Scolaire WHERE etat = 'actif'")
        row = cursor.fetchone()
        annee_scolaire = row[0] if row else "Non d√©finie"
        
        conn.close()
        
        # Affichage des m√©triques
        col1.metric("√âl√®ves enregistr√©s", nb_eleves)
        col2.metric("Classes actives", nb_classes)
        col3.metric("Disciplines", nb_disciplines)
        col4.metric("Ann√©e scolaire", annee_scolaire)
        
        # Informations sur l'√©tablissement
        st.subheader("üìç Informations de l'√©tablissement")
        
        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM Configuration LIMIT 1")
        config = cursor.fetchone()
        conn.close()
        
        if config:
            col1, col2 = st.columns(2)
            col1.info(f"""
            **Nom**: {config['nom_etablissement'] or 'Non d√©fini'}  
            **Adresse**: {config['adresse'] or 'Non d√©finie'}  
            **T√©l√©phone**: {config['telephone'] or 'Non d√©fini'}
            """)
            
            col2.info(f"""
            **Inspection d'acad√©mie**: {config['inspection_academique'] or 'Non d√©finie'}  
            **Inspection de l'√©ducation**: {config['inspection_education'] or 'Non d√©finie'}
            """)
        else:
            st.warning("Les informations de l'√©tablissement ne sont pas encore configur√©es. Veuillez vous rendre dans le module Param√®tres.")
    
    else:
        # Message pour l'utilisateur si aucune donn√©e n'existe
        st.info("Aucune donn√©e n'est encore disponible. Commencez par configurer l'application dans le module Param√®tres.")
    
    # Pied de page avec des liens d'aide
    st.divider()
    st.markdown("""
    ### Besoin d'aide?
    - Consultez la documentation compl√®te pour apprendre √† utiliser LCAMS
    - Importez des donn√©es dans le Module Semestre 1 ou Semestre 2
    - Configurez les param√®tres de votre √©tablissement
    """)